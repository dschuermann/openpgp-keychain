buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        // NOTE: Always use fixed version codes not dynamic ones, e.g. 0.7.3 instead of 0.7.+, see README for more information
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

String[] buildToolsAvailable() {
    def command = 'locate -b build-tools'
    def path = command.execute().text.trim()
    def buildToolsDir = new File(path)
    buildToolsDir.list().sort { a, b -> b <=> a }
}

String latestBuildTools(String defaultBuildTools) {
    try {
        def buildToolsVersions = buildToolsAvailable()
        def latestBuildTools = buildToolsVersions[0]
        if (latestBuildTools != null) {
            //println "Using latest found build tools " + latestBuildTools
            latestBuildTools
        } else {
            println "No installed build tools found. Using default build tools "+defaultBuildTools
            defaultBuildTools
        }
    } catch (any) {
        println "Exception while determining latest build tools. Using default build tools " +
                defaultBuildTools

        defaultBuildTools
    }
}

ext {
    buildToolsVersion = latestBuildTools("19.0.0")
    compileSdkVersion = Integer.parseInt(buildToolsVersion.substring
            (0,buildToolsVersion.indexOf('.')))
}


allprojects {
    repositories {
        jcenter()

        maven {
            // for https://github.com/journeyapps/zxing-android-embedded
            url "http://dl.bintray.com/journeyapps/maven"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = 1
    }
}

// Ignore tests for external dependency
project(':extern:spongycastle') {
    subprojects {
        // Need to re-apply the plugin here otherwise the test property below can't be set.
        apply plugin: 'java'
        test.enabled = false
    }
}
